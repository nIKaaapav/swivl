{"ast":null,"code":"import { LOADING_USERS, SAVE_CURRENT_USER, SAVE_USERS } from \"./types\";\n\nconst saveAllUsers = users => ({\n  type: SAVE_USERS,\n  payload: users\n});\n\nconst saveUser = user => ({\n  type: SAVE_CURRENT_USER,\n  payload: user\n});\n\nconst setLoading = loading => ({\n  type: LOADING_USERS,\n  payload: loading\n});\n\nconst getAllUsers = (per_page, since) => dispatch => {\n  dispatch(setLoading(true));\n  fetch(`https://api.github.com/users?per_page=${per_page}&since=${since}`).then(res => res.json()).then(data => {\n    dispatch(saveAllUsers(data));\n    dispatch(setLoading(false));\n  });\n};\n\nconst getUser = userName => dispatch => {\n  dispatch(setLoading(true));\n  fetch(`https://api.github.com/users/${userName}`).then(res => res.json()).then(data => {\n    dispatch(saveUser(data));\n    dispatch(setLoading(false));\n  });\n};\n\nexport default {\n  getAllUsers,\n  getUser\n};","map":{"version":3,"names":["LOADING_USERS","SAVE_CURRENT_USER","SAVE_USERS","saveAllUsers","users","type","payload","saveUser","user","setLoading","loading","getAllUsers","per_page","since","dispatch","fetch","then","res","json","data","getUser","userName"],"sources":["/Users/nikapavlenko/Documents/swivl/src/redux/usersState/actions.js"],"sourcesContent":["import {LOADING_USERS, SAVE_CURRENT_USER, SAVE_USERS} from \"./types\";\n\nconst saveAllUsers = (users) => ({type: SAVE_USERS, payload: users});\nconst saveUser = (user) => ({type: SAVE_CURRENT_USER, payload: user});\nconst setLoading = (loading) => ({type: LOADING_USERS, payload: loading});\n\nconst getAllUsers = (per_page, since) => dispatch => {\n    dispatch(setLoading(true));\n    fetch(`https://api.github.com/users?per_page=${per_page}&since=${since}`)\n        .then(res => res.json())\n        .then((data) => {\n            dispatch(saveAllUsers(data));\n            dispatch(setLoading(false));\n        })\n};\n\nconst getUser = (userName) => dispatch => {\n    dispatch(setLoading(true));\n    fetch(`https://api.github.com/users/${userName}`)\n        .then(res => res.json())\n        .then((data) => {\n            dispatch(saveUser(data));\n            dispatch(setLoading(false));\n        })\n};\n\nexport default {\n    getAllUsers,\n    getUser\n}"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,iBAAvB,EAA0CC,UAA1C,QAA2D,SAA3D;;AAEA,MAAMC,YAAY,GAAIC,KAAD,KAAY;EAACC,IAAI,EAAEH,UAAP;EAAmBI,OAAO,EAAEF;AAA5B,CAAZ,CAArB;;AACA,MAAMG,QAAQ,GAAIC,IAAD,KAAW;EAACH,IAAI,EAAEJ,iBAAP;EAA0BK,OAAO,EAAEE;AAAnC,CAAX,CAAjB;;AACA,MAAMC,UAAU,GAAIC,OAAD,KAAc;EAACL,IAAI,EAAEL,aAAP;EAAsBM,OAAO,EAAEI;AAA/B,CAAd,CAAnB;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqBC,QAAQ,IAAI;EACjDA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;EACAM,KAAK,CAAE,yCAAwCH,QAAS,UAASC,KAAM,EAAlE,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;IACZL,QAAQ,CAACX,YAAY,CAACgB,IAAD,CAAb,CAAR;IACAL,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR;EACH,CALL;AAMH,CARD;;AAUA,MAAMW,OAAO,GAAIC,QAAD,IAAcP,QAAQ,IAAI;EACtCA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;EACAM,KAAK,CAAE,gCAA+BM,QAAS,EAA1C,CAAL,CACKL,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;IACZL,QAAQ,CAACP,QAAQ,CAACY,IAAD,CAAT,CAAR;IACAL,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR;EACH,CALL;AAMH,CARD;;AAUA,eAAe;EACXE,WADW;EAEXS;AAFW,CAAf"},"metadata":{},"sourceType":"module"}